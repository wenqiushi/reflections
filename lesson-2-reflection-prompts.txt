What happens when you initialize a repository? Why do you need to do it?
文件夹下面生成了一个.git隐藏文件夹，里面记录了一些日志和meta data信息。

How is the staging area different from the working directory and the repository?
What value do you think it offers?
暂时存储区提供一个“桶子”可以一次批量提交修改内容而不影响工作区域与日志仓库。


How can you use the staging area to make sure you have one commit per logical
change?

git diff  (W .vs. S)
git diff --staged (S .vs. C)
git diff C1 C2 (C1 .vs. C2)
git add XXX
git commit
...


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

实现新功能以及不想污染已经拥有的系统版本。

How do the diagrams help you visualize the branch structure?

提交操作（commit）是可逆向的，当git checkout 【ID...】 
时创建了一个未命名的临时域，之后需要建立新的分支以保存任何修改。

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

自动合并方便快捷，清晰的部分不容易产生冲突，手动合并需要在文件产生冲突时手动解决，提供了另一种稳定更新版本的方法。

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?